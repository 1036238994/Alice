import numpy as np
from numpy import *


reserverWordList = ["iostream", "break", "case", "char", "const", "continue",
    "default", "do", "double", "else", "enum", "extern",
    "float", "for", "goto", "if", "int", "long",
    "register", "return", "short", "signed", "sizeof", "static",
    "struct", "switch", "typedef", "include", "unsigned", "void",
    "volatile", "while"]


operatorOrDelimiterList = ["+","-","*","/","<","<=",">",">=","=","==",
   "!=",";","(",")","^",",",'"',"'","#","&",
   "&&","|","||","%","~","<<",">>","[","]","{",
   "}","\\",".","\?",":","!"]

IDentifierList = [[]]
dataOfFile = list()
token = list()


syn = [-1]


def isLetter(val):
    if (val >= 'a' and val <= 'z') or (val >= 'A' and val <= 'Z'):
        return True
    else:
        return False


def isDigit(val):
    if val >= '0' and val <= '9':
        return True
    else:
        return False


def searchReserve(val):
    val = ''.join(val)
    print("val is : ",val)
    for word in reserverWordList:
        if word == val:
            print("yesy 保留字")
            return reserverWordList.index(word) + 1
    return -1


def filterDocument(filePath):
    file = open(filePath)
    letterList = file.read()
    for i in range(len(letterList)):
        if letterList[i] == '/' and letterList[i + 1] == '/':
            while letterList[i] != '\t':
                i += 1
        if letterList[i] == '/' and letterList[i + 1] == '*':
            i += 2
            while letterList[i] != '*' and letterList[i+1]!='/':
                i += 1
                if letterList[i] == '$':
                    print("程序结束——注释/*符号异常")
                    exit(0)
            i += 2
        if letterList[i] != '\n' and letterList != '\t' and letterList[i] != '\r':
            dataOfFile.append(letterList[i])

token = list()
index = [0]
def scannerMain(dataOfFile, syn, token, index):

    for letter in dataOfFile:
        if letter == ' ':
            del(dataOfFile[dataOfFile.index(letter)])
    del(token[:])
    val = dataOfFile[index[0]]
    if isLetter(dataOfFile[index[0]]):
       # print(dataOfFile[index[0]])
        token.append(dataOfFile[index[0]])

        index[0] += 1
        while isLetter(dataOfFile[index[0]] or isDigit(dataOfFile[index[0]])):
            token.append(dataOfFile[index[0]])
            index[0] += 1
            val = dataOfFile[index[0]]


        syn[0] = searchReserve(token)
        #保留字
        #print("this ... /// ")
        if syn[0] == -1:
            #标识符
            syn[0] = 100
            #print("this........")
        return None
    elif isDigit(dataOfFile[index[0]]):
        #print(dataOfFile[index[0]])
        #print("index this ... ")
        while isDigit(dataOfFile[index[0]]):
            token.append(dataOfFile[index[0]])
            index[0] += 1
            val = dataOfFile[index[0]]
        #常数
        syn[0] = 99
    elif val in ['+', '-', '*', '/' ,';', '(', ')', '^', ',', '\\', '~', '#' ,'%', '[', ']', '{', '}', '\\\\', '.'
                 ,'\?', ':']:
        token.append(dataOfFile[index[0]])
       # print(dataOfFile[index[0]])
        #print("this,.......")
        print("this .. token : ", token)
        for i in range(36):
            if operatorOrDelimiterList[i] in token:
                syn[0] = 33+i
                break
       # print("syn inside : ", syn[0])
        index[0] += 1
        #print("index inside : ", index[0])
    elif dataOfFile[index[0]] == "<":
        #print(dataOfFile[index[0]])
        index[0] += 1
        if dataOfFile[index[0]] == '=':
            syn[0] = 38
        elif dataOfFile[index[0]] == '<':
            index[0] -= 1
            syn[0] = 58
        else:
            index[0] -= 1
            syn[0] = 37
        index[0] += 1
        return None
    elif dataOfFile[index[0]] == '>':
        #print(dataOfFile[index[0]])
        index[0] += 1
        if dataOfFile[index[0]] == '=':
            syn[0] = 40
        elif dataOfFile[index[0]] == '>':
            syn[0] = 59
        else:
            index[0] -= 1
            syn[0] = 39
        index[0] += 1
        return None
    elif dataOfFile[index[0]] == '=':
        #print(dataOfFile[index[0]])
        index[0] += 1
        if dataOfFile[index[0]] == '=':
            syn[0] = 42
        else:
            index[0] -= 1
            syn[0] = 41
        index[0] += 1
        return None
    elif dataOfFile[index[0]] == '!':
        #print(dataOfFile[index[0]])
        index[0] += 1
        if dataOfFile[index[0]] == '=':
            syn[0] = 43
        else:
            syn[0] = 68
            index[0] -= 1
        index[0] += 1
        return None
    elif dataOfFile[index[0]] == "&":
        #print(dataOfFile[index[0]])
        index[0] += 1
        if dataOfFile[index[0]] == '&':
            syn[0] = 53
        else:
            index[0] -= 1
            syn[0] = 52
        index[0] += 1
        return None
    elif dataOfFile[index[0]] == '|':
        #print(dataOfFile[index[0]])
        index[0] += 1
        if dataOfFile[index[0]] == '|':
            syn[0] = 55
        else:
            index[0] -= 1
            syn[0] = 54
        index[0] += 1
        return None
    elif dataOfFile[index[0]] == '$':
        #print(dataOfFile[index[0]])
        syn[0] = 0
    else:
        print(dataOfFile[index[0]])
        print("无法识别")
        exit(0)



if __name__ == '__main__':
    filterDocument(r"C:\Users\Admin\Desktop\text.txt")
    print(dataOfFile)
    while syn[0] != 0:
        a = scannerMain(dataOfFile, syn, token, index)
        if syn[0] == 100:
            if token not in IDentifierList:
                IDentifierList.append(token)
            print("标识符: ", ''.join(token))
        elif syn[0] >= 1 and syn[0] <= 32:
            print("保留字： ",reserverWordList[syn[0]-1])
        elif syn == 99:
            print("常数: ", token)
        elif syn[0] >= 33 and syn[0] <= 68:
            print("操作符或界符: ", operatorOrDelimiterList[syn[0]-33])
    print(len(IDentifierList))
    print("reverserWorld : ")
    print(reserverWordList)
    print(dataOfFile)


